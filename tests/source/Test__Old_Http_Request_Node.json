{
  "meta": {
    "instanceId": "ac7c827da56e852a0a6fec36e4b55ade4a0331714f3a850931f8ac704749495e"
  },
  "nodes": [
    {
      "parameters": {
        "requestMethod": "HEAD",
        "url": "http://localhost:5678/webhook/d2568160-d906-4338-b7f0-78e1dcb8eda5",
        "options": {},
        "headerParametersUi": {
          "parameter": [
            {
              "name": "name",
              "value": "Ani"
            }
          ]
        },
        "queryParametersUi": {
          "parameter": [
            {
              "name": "age",
              "value": "13"
            }
          ]
        }
      },
      "name": "Head",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 1,
      "position": [
        400,
        1160
      ],
      "id": "8256fdf0-620c-4593-a403-5ede83a2fc20",
      "alwaysOutputData": true,
      "disabled": true
    },
    {
      "parameters": {
        "requestMethod": "OPTIONS",
        "url": "http://localhost:5678/webhook/9b43a8a6-db70-4001-96d5-bce674ba071e",
        "jsonParameters": true,
        "options": {},
        "queryParametersJson": "={     \"name\": \"John Doe\",     \"email\": \"john.doe@example.com\",     \"age\": 30,     \"address\": {       \"street\": \"123 Main St\",       \"city\": \"Example City\",       \"state\": \"CA\",       \"zip\": \"12345\"     } }"
      },
      "name": "Options",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 1,
      "position": [
        420,
        880
      ],
      "id": "9546f33a-5874-442e-bc13-d74d887e12a4",
      "disabled": true
    },
    {
      "parameters": {
        "requestMethod": "PATCH",
        "url": "http://localhost:5678/webhook/147bce37-8acb-4097-9f08-90c21e321ef6",
        "options": {},
        "bodyParametersUi": {
          "parameter": [
            {
              "name": "name",
              "value": "Ani"
            }
          ]
        },
        "headerParametersUi": {
          "parameter": [
            {
              "name": "phone",
              "value": "222"
            }
          ]
        },
        "queryParametersUi": {
          "parameter": [
            {
              "name": "age",
              "value": "13"
            }
          ]
        }
      },
      "name": "Patch",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 1,
      "position": [
        -140,
        880
      ],
      "id": "50b8d534-6dd1-4f15-aa9f-debc5d9bb037"
    },
    {
      "parameters": {
        "requestMethod": "PUT",
        "url": "http://localhost:5678/webhook/04607968-482e-4376-99a6-c82442a98ef9",
        "options": {},
        "bodyParametersUi": {
          "parameter": [
            {
              "name": "name",
              "value": "Ani"
            }
          ]
        },
        "headerParametersUi": {
          "parameter": [
            {
              "name": "new",
              "value": "test"
            }
          ]
        },
        "queryParametersUi": {
          "parameter": [
            {
              "name": "age",
              "value": "13"
            }
          ]
        }
      },
      "name": "Put",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 1,
      "position": [
        -140,
        480
      ],
      "id": "7c97915b-d679-4f72-bca8-be36968fe60c"
    },
    {
      "parameters": {},
      "id": "db81a86d-8095-439b-8e23-d55782139765",
      "name": "When clicking \"Execute Workflow\"",
      "type": "n8n-nodes-base.manualTrigger",
      "typeVersion": 1,
      "position": [
        380,
        240
      ]
    },
    {
      "parameters": {
        "jsCode": "const assert = require('node:assert');\nconst data = items[0].json;\n\ndelete data.headers.accept;\n\nassert.deepStrictEqual(JSON.parse(JSON.stringify(items[0].json)),{\n  \"headers\": {\n    \"name\": \"test\",\n    \"user-agent\": \"axios/0.21.4\",\n    \"host\": \"localhost:5678\",\n    \"connection\": \"close\"\n  },\n  \"params\": {},\n  \"query\": {\n    \"new\": \"one\"\n  }\n}\n   );\n\nreturn [];"
      },
      "id": "2d55d179-79ac-4fb5-8b07-60b077a18d38",
      "name": "Assert",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -420,
        1080
      ]
    },
    {
      "parameters": {
        "jsCode": "const assert = require('node:assert');\nconst data = items[0].json;\n\ndelete data.headers.accept;\n\nassert.deepStrictEqual(JSON.parse(JSON.stringify(items[0].json)),{\n  \"headers\": {\n  \n    \"test\": \"1\",\n    \"content-type\": \"application/json\",\n    \"user-agent\": \"axios/0.21.4\",\n    \"content-length\": \"12\",\n    \"host\": \"localhost:5678\",\n    \"connection\": \"close\"\n  },\n  \"params\": {},\n  \"query\": {\n    \"name\": \"Ani\",\n    \"phone\": \"123\"\n  },\n  \"body\": {\n    \"age\": \"13\"\n  }\n}\n   );\n\nreturn [];"
      },
      "id": "e3e52efa-c404-43b7-9842-4c166cee2308",
      "name": "Assert1",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -440,
        460
      ]
    },
    {
      "parameters": {
        "jsCode": "const assert = require('node:assert');\nconst data = items[0].json;\n\ndelete data.headers.accept;\n\nassert.deepStrictEqual(JSON.parse(JSON.stringify(items[0].json)),{\n  \"headers\": {\n    \"test\": \"123\",\n    \"user-agent\": \"axios/0.21.4\",\n    \"host\": \"localhost:5678\",\n    \"connection\": \"close\"\n  },\n  \"params\": {},\n  \"query\": {\n    \"name\": \"Ani\"\n  }\n}\n   );\n\nreturn [];"
      },
      "id": "cd423dbd-58ec-443e-be74-03ab39a4b873",
      "name": "Assert2",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        620,
        1160
      ],
      "disabled": true
    },
    {
      "parameters": {
        "jsCode": "const assert = require('node:assert');\nconst data = items[0].json;\n\ndelete data.headers.accept;\n\nassert.deepStrictEqual(JSON.parse(JSON.stringify(items[0].json)),{\n  \"headers\": {\n    \"phone\": \"222\",\n    \"content-type\": \"application/json\",\n    \"user-agent\": \"axios/0.21.4\",\n    \"content-length\": \"14\",\n    \"host\": \"localhost:5678\",\n    \"connection\": \"close\"\n  },\n  \"params\": {},\n  \"query\": {\n    \"age\": \"13\"\n  },\n  \"body\": {\n    \"name\": \"Ani\"\n  }\n}\n   );\n\nreturn [];"
      },
      "id": "e66235ee-075c-4dff-b02c-b79cbe9074fc",
      "name": "Assert3",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        60,
        880
      ]
    },
    {
      "parameters": {
        "jsCode": "const assert = require('node:assert');\nconst data = items[0].json;\n\ndelete data.headers.accept;\n\nassert.deepStrictEqual(JSON.parse(JSON.stringify(items[0].json)),{\n  \"headers\": {\n    \"new\": \"test\",\n    \"content-type\": \"application/json\",\n    \"user-agent\": \"axios/0.21.4\",\n    \"content-length\": \"14\",\n    \"host\": \"localhost:5678\",\n    \"connection\": \"close\"\n  },\n  \"params\": {},\n  \"query\": {\n    \"age\": \"13\"\n  },\n  \"body\": {\n    \"name\": \"Ani\"\n  }\n}\n   );\n\nreturn [];"
      },
      "id": "33193ac5-28f4-474c-816e-8cfaad3d9bd0",
      "name": "Assert4",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        60,
        480
      ]
    },
    {
      "parameters": {
        "jsCode": "const assert = require('node:assert');\nconst data = items[0].json;\n\ndelete data.headers.accept;\n  \nassert.deepStrictEqual(JSON.parse(JSON.stringify(items[0].json)),{\n  \"headers\": {\n    \"test\": \"1\",\n    \"content-type\": \"application/json\",\n    \"user-agent\": \"axios/0.21.4\",\n    \"content-length\": \"14\",\n    \"host\": \"localhost:5678\",\n    \"connection\": \"close\"\n  },\n  \"params\": {},\n  \"query\": {\n    \"phone\": \"123\"\n  },\n  \"body\": {\n    \"name\": \"Ani\"\n  }\n}\n   );\n\nreturn [];"
      },
      "id": "7b8c8650-0e4f-4b8b-8052-c1cc77ee9753",
      "name": "Assert5",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        60,
        1480
      ]
    },
    {
      "parameters": {
        "jsCode": "const assert = require('node:assert');\n\nassert.deepStrictEqual(JSON.parse(JSON.stringify(items[0].json)),{\n  \"id\": [\n    1,\n    2,\n    3,\n    3\n  ]\n}\n   );\n\nreturn [];"
      },
      "id": "0aae77bd-13d5-482a-b7ce-5b893c71332d",
      "name": "Assert6",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        620,
        880
      ],
      "disabled": true
    },
    {
      "parameters": {
        "jsCode": "const assert = require('node:assert');\nconst data = items[0].json;\n\ndelete data.headers.accept;\n\nassert.deepStrictEqual(JSON.parse(JSON.stringify(items[0].json)),{\n  \"headers\": {\n    \"content-type\": \"application/json\",\n    \"user-agent\": \"axios/0.21.4\",\n    \"content-length\": \"28\",\n    \"host\": \"localhost:5678\",\n    \"authorization\": \"Basic dGVzdDp0ZXN0\",\n    \"connection\": \"close\"\n  },\n  \"params\": {},\n  \"query\": {},\n  \"body\": {\n    \"name\": \"Ani\",\n    \"phone\": \"123\"\n  }\n}\n   );\n\nreturn [];"
      },
      "id": "ff3197f1-4999-41a4-a5d2-fe650a2f1f1a",
      "name": "Assert7",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        620,
        480
      ]
    },
    {
      "parameters": {
        "requestMethod": "POST",
        "url": "http://localhost:5678/webhook/9b43a8a6-db70-4001-96d5-bce674ba071e",
        "options": {
          "fullResponse": false
        },
        "bodyParametersUi": {
          "parameter": [
            {
              "name": "age",
              "value": "13"
            }
          ]
        },
        "headerParametersUi": {
          "parameter": [
            {
              "name": "test",
              "value": "1"
            }
          ]
        },
        "queryParametersUi": {
          "parameter": [
            {
              "name": "name",
              "value": "Ani"
            },
            {
              "name": "phone",
              "value": "123"
            }
          ]
        }
      },
      "name": "POST",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 1,
      "position": [
        -640,
        460
      ],
      "id": "0e3185ee-af26-4124-a6b0-84ace79fbf82"
    },
    {
      "parameters": {
        "url": "http://localhost:5678/webhook/e58c05c3-74f6-429a-b182-e3c8d6af9d8e",
        "options": {},
        "headerParametersUi": {
          "parameter": [
            {
              "name": "name",
              "value": "test"
            }
          ]
        },
        "queryParametersUi": {
          "parameter": [
            {
              "name": "new",
              "value": "one"
            }
          ]
        }
      },
      "name": "GET",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 1,
      "position": [
        -620,
        1080
      ],
      "id": "6a0bcc68-c512-4738-ad86-925f1e902366"
    },
    {
      "parameters": {
        "jsCode": "const assert = require('node:assert');\nconst data = items[0].json;\n\ndelete data.headers.accept;\n\nassert.deepStrictEqual(JSON.parse(JSON.stringify(data)),{\n  \"headers\": {\n    \"name\": \"Ani\",\n    \"content-type\": \"application/json\",\n    \"user-agent\": \"axios/0.21.4\",\n    \"content-length\": \"35\",\n    \"host\": \"localhost:5678\",\n    \"connection\": \"close\"\n  },\n  \"params\": {},\n  \"query\": {\n    \"new\": \"one\"\n  },\n  \"body\": {\n    \"name\": \"Ani\",\n    \"test\": 1,\n    \"phone\": 123\n  }\n}\n   );\n\nreturn [];"
      },
      "id": "fc200551-f468-4146-bfbf-d1b9541cdc79",
      "name": "Assert8",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -440,
        640
      ]
    },
    {
      "parameters": {
        "jsCode": "return {\n  \"name\": \"Ani\",\n  \"test\": 1,\n  \"phone\": 123,\n}"
      },
      "id": "52d2aebd-6954-4caf-9e9e-d705a146cbc4",
      "name": "Return Data",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        560,
        240
      ]
    },
    {
      "parameters": {
        "content": "## POST",
        "height": 580.6255180951147,
        "width": 405.4112848402448
      },
      "id": "e1d35495-beab-40bf-9ef6-7997775afab7",
      "name": "Sticky Note2",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -660,
        400
      ]
    },
    {
      "parameters": {
        "requestMethod": "POST",
        "url": "http://localhost:5678/webhook/9b43a8a6-db70-4001-96d5-bce674ba071e",
        "jsonParameters": true,
        "options": {
          "fullResponse": false
        },
        "bodyParametersJson": "={{ $json }}",
        "headerParametersJson": "={\"name\": \"Ani\"}",
        "queryParametersJson": "{\"new\": \"one\"}"
      },
      "name": "POST with expresions",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 1,
      "position": [
        -640,
        640
      ],
      "id": "a93c3747-e75e-420a-9b88-c56ccbee6cd1"
    },
    {
      "parameters": {
        "content": "## GET",
        "height": 579.8701973280386,
        "width": 403.26308633582596
      },
      "id": "4862e3c3-1eb5-40dd-acea-1d7263c5f0e2",
      "name": "Sticky Note3",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -660,
        1020
      ]
    },
    {
      "parameters": {
        "jsCode": "const assert = require('node:assert');\n\nconst data = items[0].json;\n\ndelete data.headers.accept;\n\nassert.deepStrictEqual(JSON.parse(JSON.stringify(items[0].json)),{\n  \"headers\": {\n    \"name\": \"Ani\",\n    \"user-agent\": \"axios/0.21.4\",\n    \"host\": \"localhost:5678\",\n    \"connection\": \"close\"\n  },\n  \"params\": {},\n  \"query\": {\n    \"phone\": \"123\"\n  }\n}\n   );\n\nreturn [];"
      },
      "id": "a4bca5c0-e64b-44aa-a671-03cff81f0915",
      "name": "Assert9",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -420,
        1240
      ]
    },
    {
      "parameters": {
        "url": "http://localhost:5678/webhook/e58c05c3-74f6-429a-b182-e3c8d6af9d8e",
        "jsonParameters": true,
        "options": {},
        "headerParametersJson": "={\"name\":\"{{ $json.name }}\"}  ",
        "queryParametersJson": "={\"phone\":\"{{ $json.phone }}\"}"
      },
      "name": "GET with Expressions",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 1,
      "position": [
        -620,
        1240
      ],
      "id": "ae42b553-8541-49b5-8392-ed648a597786"
    },
    {
      "parameters": {
        "jsCode": "const assert = require('node:assert');\nconst data = items[0].json;\n\ndelete data.headers.accept;\n\nassert.deepStrictEqual(JSON.parse(JSON.stringify(items[0].json)),{\n  \"headers\": {\n    \"new\": \"test\",\n    \"content-type\": \"application/json\",\n    \"user-agent\": \"axios/0.21.4\",\n    \"content-length\": \"143\",\n    \"host\": \"localhost:5678\",\n    \"connection\": \"close\"\n  },\n  \"params\": {},\n  \"query\": {\n    \"name\": \"Ani\"\n  },\n  \"body\": {\n    \"name\": \"John Doe\",\n    \"email\": \"john.doe@example.com\",\n    \"age\": 30,\n    \"address\": {\n      \"street\": \"123 Main St\",\n      \"city\": \"Example City\",\n      \"state\": \"CA\",\n      \"zip\": \"12345\"\n    }\n  }\n}\n   );\n\nreturn [];"
      },
      "id": "f34834af-c7bc-401c-a1b5-97399112e3f1",
      "name": "Assert10",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        60,
        640
      ]
    },
    {
      "parameters": {
        "requestMethod": "PUT",
        "url": "http://localhost:5678/webhook/04607968-482e-4376-99a6-c82442a98ef9",
        "jsonParameters": true,
        "options": {},
        "bodyParametersJson": "={\n    \"name\": \"John Doe\",\n    \"email\": \"john.doe@example.com\",\n    \"age\": 30,\n    \"address\": {\n      \"street\": \"123 Main St\",\n      \"city\": \"Example City\",\n      \"state\": \"CA\",\n      \"zip\": \"12345\"\n    }\n}",
        "headerParametersJson": "={\"new\": \"test\" }",
        "queryParametersJson": "={\"name\": \"{{ $json.name }}\" }"
      },
      "name": "Put with Expression",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 1,
      "position": [
        -140,
        640
      ],
      "id": "4e2b2e4f-1a75-46ac-b165-89a1cac0f2c0"
    },
    {
      "parameters": {
        "content": "## PUT",
        "height": 367.91529164328654,
        "width": 403.26308633582596
      },
      "id": "481aa4ca-a3eb-4658-b3ce-29fe4451076a",
      "name": "Sticky Note4",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -180,
        420
      ]
    },
    {
      "parameters": {
        "jsCode": "const assert = require('node:assert');\nconst data = items[0].json;\n\ndelete data.headers.accept;\n\nassert.deepStrictEqual(JSON.parse(JSON.stringify(items[0].json)),{\n  \"headers\": {\n    \"name\": \"Ani\",\n    \"content-type\": \"application/json\",\n    \"user-agent\": \"axios/0.21.4\",\n    \"content-length\": \"143\",\n    \"host\": \"localhost:5678\",\n    \"connection\": \"close\"\n  },\n  \"params\": {},\n  \"query\": {\n    \"phone\": \"123\"\n  },\n  \"body\": {\n    \"name\": \"John Doe\",\n    \"email\": \"john.doe@example.com\",\n    \"age\": 30,\n    \"address\": {\n      \"street\": \"123 Main St\",\n      \"city\": \"Example City\",\n      \"state\": \"CA\",\n      \"zip\": \"12345\"\n    }\n  }\n}\n   );\n\nreturn [];"
      },
      "id": "c9b4bb98-76a5-46fc-9455-dc4459bb3886",
      "name": "Assert11",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        60,
        1040
      ]
    },
    {
      "parameters": {
        "requestMethod": "PATCH",
        "url": "http://localhost:5678/webhook/147bce37-8acb-4097-9f08-90c21e321ef6",
        "jsonParameters": true,
        "options": {},
        "bodyParametersJson": "={\n    \"name\": \"John Doe\",\n    \"email\": \"john.doe@example.com\",\n    \"age\": 30,\n    \"address\": {\n      \"street\": \"123 Main St\",\n      \"city\": \"Example City\",\n      \"state\": \"CA\",\n      \"zip\": \"12345\"\n    }\n}",
        "headerParametersJson": "={\"name\": \"{{$json.name}}\"}",
        "queryParametersJson": "={\"phone\": \"{{$json.phone}}\"}"
      },
      "name": "Patch with Expressions",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 1,
      "position": [
        -140,
        1040
      ],
      "id": "57243110-6a34-4946-bcf4-091f9b51a7c4"
    },
    {
      "parameters": {
        "content": "## PATCH",
        "height": 367.91529164328654,
        "width": 403.26308633582596
      },
      "id": "26d5f32d-77d4-45fb-80b6-c4633c18cece",
      "name": "Sticky Note5",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -180,
        820
      ]
    },
    {
      "parameters": {
        "requestMethod": "HEAD",
        "url": "http://localhost:5678/webhook/d2568160-d906-4338-b7f0-78e1dcb8eda5",
        "jsonParameters": true,
        "options": {},
        "headerParametersJson": "={\"test\":123}",
        "queryParametersJson": "={\"name\": \"Ani\"}"
      },
      "name": "Head with Expressions",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 1,
      "position": [
        400,
        1320
      ],
      "id": "51de497f-77b0-4d04-afdf-4e5547a17edc",
      "alwaysOutputData": true,
      "disabled": true
    },
    {
      "parameters": {
        "content": "## HEAD",
        "height": 381.2644459551324,
        "width": 403.26308633582596
      },
      "id": "9705fc8c-7037-40a0-965f-e16375f917e8",
      "name": "Sticky Note6",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        380,
        1100
      ]
    },
    {
      "parameters": {
        "jsCode": "const assert = require('node:assert');\nconst data = items[0].json;\n\ndelete data.headers.accept;\n\nassert.deepStrictEqual(JSON.parse(JSON.stringify(items[0].json)),{\n  \"headers\": {\n    \"test\": \"123\",\n    \"user-agent\": \"axios/0.21.4\",\n    \"host\": \"localhost:5678\",\n    \"connection\": \"close\"\n  },\n  \"params\": {},\n  \"query\": {\n    \"name\": \"Ani\"\n  }\n}\n   );\n\nreturn [];"
      },
      "id": "106e3fb3-fac5-421d-921e-7b85edb57a9b",
      "name": "Assert12",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        620,
        1320
      ],
      "disabled": true
    },
    {
      "parameters": {
        "requestMethod": "DELETE",
        "url": "http://localhost:5678/webhook/8df25297-b9b8-492a-ab37-019d640a2dc6",
        "options": {
          "batchInterval": 1000,
          "batchSize": 50,
          "fullResponse": true,
          "followAllRedirects": true,
          "followRedirect": true,
          "timeout": 10000
        },
        "headerParametersUi": {
          "parameter": [
            {
              "name": "name",
              "value": "Jhon"
            },
            {
              "name": "Authorization",
              "value": "=test"
            }
          ]
        },
        "queryParametersUi": {
          "parameter": [
            {
              "name": "fromDate",
              "value": "=date"
            },
            {
              "name": "new name",
              "value": "Ani"
            }
          ]
        }
      },
      "name": "Delete1",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 1,
      "position": [
        -160,
        1300
      ],
      "id": "4a3ae09b-095a-4c98-a40c-da1755849159"
    },
    {
      "parameters": {
        "content": "## DELETE",
        "height": 586.4514927433695,
        "width": 403.26308633582596
      },
      "id": "d43677f9-3c1b-4a31-86f2-0a469a91fbd4",
      "name": "Sticky Note7",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -180,
        1220
      ]
    },
    {
      "parameters": {
        "jsCode": "const assert = require('node:assert');\nconst data = items[0].json;\n\ndelete data.body.headers.accept;\ndelete data.headers.date;\ndelete data.headers['content-length'];\ndelete data.headers.etag;\n\nassert.deepStrictEqual(JSON.parse(JSON.stringify(items[0].json)),{\n  \"body\": {\n    \"headers\": {\n      \"name\": \"Jhon\",\n      \"authorization\": \"test\",\n      \"user-agent\": \"axios/0.21.4\",\n      \"host\": \"localhost:5678\",\n      \"connection\": \"close\"\n    },\n    \"params\": {},\n    \"query\": {\n      \"fromDate\": \"date\",\n      \"new name\": \"Ani\"\n    }\n  },\n  \"headers\": {\n    \"content-type\": \"application/json; charset=utf-8\",\n    \"vary\": \"Accept-Encoding\",\n    \"connection\": \"close\"\n  },\n  \"statusCode\": 200,\n  \"statusMessage\": \"OK\"\n}\n   );\n\nreturn [];"
      },
      "id": "f885dce2-441c-46a1-926c-55ef1c51d254",
      "name": "Assert13",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        60,
        1300
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "http://localhost:5678/webhook/9b43a8a6-db70-4001-96d5-bce674ba071e",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpBasicAuth",
        "sendQuery": true,
        "specifyQuery": "json",
        "jsonQuery": "={\"new\": \"one\"}",
        "sendHeaders": true,
        "specifyHeaders": "json",
        "jsonHeaders": "={\"send\": \"header\"}",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={{ $json }}",
        "options": {}
      },
      "id": "529d6f05-5c5e-4ec8-aa84-896b5c105f7d",
      "name": "Basic Auth/POST1",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        420,
        620
      ],
      "credentials": {
        "httpBasicAuth": {
          "id": "60",
          "name": "Test"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "const assert = require('node:assert');\nconst data = items[0].json;\n\ndelete data.headers.accept;\n\nassert.deepStrictEqual(JSON.parse(JSON.stringify(items[0].json)),{\n  \"headers\": {\n    \"send\": \"header\",\n    \"content-type\": \"application/json\",\n    \"user-agent\": \"axios/0.21.4\",\n    \"content-length\": \"35\",\n    \"host\": \"localhost:5678\",\n    \"authorization\": \"Basic dGVzdDp0ZXN0\",\n    \"connection\": \"close\"\n  },\n  \"params\": {},\n  \"query\": {\n    \"new\": \"one\"\n  },\n  \"body\": {\n    \"name\": \"Ani\",\n    \"test\": 1,\n    \"phone\": 123\n  }\n}\n   );\n\nreturn [];"
      },
      "id": "8a287644-e0da-446b-9df8-594ef8eb07ba",
      "name": "Assert14",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        620,
        620
      ]
    },
    {
      "parameters": {
        "requestMethod": "DELETE",
        "url": "http://localhost:5678/webhook/8df25297-b9b8-492a-ab37-019d640a2dc6",
        "jsonParameters": true,
        "options": {},
        "bodyParametersJson": "={\"name\": \"{{$json.name}}\" }",
        "headerParametersJson": "={\"test\": {{$json.test}}}",
        "queryParametersJson": "={\"phone\": {{$json.phone}}}"
      },
      "name": "Delete with Expressions",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 1,
      "position": [
        -160,
        1480
      ],
      "id": "24090618-bba2-4def-a541-df78cf2f8bc2"
    },
    {
      "parameters": {
        "content": "## Basic Auth",
        "height": 381.2644459551324,
        "width": 403.26308633582596
      },
      "id": "632de869-c160-4895-8c92-1992fda436ff",
      "name": "Sticky Note8",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        380,
        420
      ]
    },
    {
      "parameters": {
        "url": "http://localhost:5678/webhook/e58c05c3-74f6-429a-b182-e3c8d6af9d8e",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpBasicAuth",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "name",
              "value": "Ani"
            },
            {
              "name": "phone",
              "value": "123"
            }
          ]
        },
        "options": {}
      },
      "id": "b05025d7-ca04-4b8a-a35b-7b5317d81d57",
      "name": "Basic Auth/GET",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        420,
        480
      ],
      "credentials": {
        "httpBasicAuth": {
          "id": "60",
          "name": "Test"
        }
      }
    },
    {
      "parameters": {
        "requestMethod": "DELETE",
        "url": "http://localhost:5678/webhook/8df25297-b9b8-492a-ab37-019d640a2dc6",
        "allowUnauthorizedCerts": true,
        "options": {
          "batchInterval": 1000,
          "batchSize": 50,
          "useQueryString": true
        },
        "headerParametersUi": {
          "parameter": [
            {
              "name": "name",
              "value": "Jhon"
            },
            {
              "name": "Authorization",
              "value": "=test"
            }
          ]
        },
        "queryParametersUi": {
          "parameter": [
            {
              "name": "color[1]",
              "value": "=red"
            },
            {
              "name": "color[0]",
              "value": "blue"
            },
            {
              "name": "color[2]",
              "value": "green"
            }
          ]
        }
      },
      "name": "Delete Check Querystring",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 1,
      "position": [
        -160,
        1660
      ],
      "id": "6a9b277c-0486-4a3b-a14d-bdea50542538"
    },
    {
      "parameters": {
        "jsCode": "const assert = require('node:assert');\nconst data = items[0].json;\n\ndelete data.headers.accept;\n\nassert.deepStrictEqual(JSON.parse(JSON.stringify(items[0].json)),{\n  \"headers\": {\n    \"name\": \"Jhon\",\n    \"authorization\": \"test\",\n    \"user-agent\": \"axios/0.21.4\",\n    \"host\": \"localhost:5678\",\n    \"connection\": \"close\"\n  },\n  \"params\": {},\n  \"query\": {\n    \"color\": [\n      \"blue\",\n      \"red\",\n      \"green\"\n    ]\n  }\n}\n   );\n\nreturn [];"
      },
      "id": "ac65a07f-4e6f-443d-a7fa-ce5130355891",
      "name": "Assert15",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        60,
        1660
      ]
    },
    {
      "parameters": {
        "content": "## TODO\nCheck splite into items options",
        "height": 286.3064943016505,
        "width": 222.70286795000823
      },
      "id": "ecf54be1-76cd-45e6-8f8f-ae3680fcbb8b",
      "name": "Sticky Note12",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        380,
        1520
      ]
    },
    {
      "parameters": {
        "content": "In the new version of the HTTP node \"splitIntoItems\" options are no longer supported?"
      },
      "id": "1522306f-c54b-4c9b-b1fd-e3b55bbdf500",
      "name": "Sticky Note1",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        640,
        1520
      ]
    },
    {
      "parameters": {
        "content": "Request method \"OPTIONS\": you will need to manually check the response to ensure it is working as expected."
      },
      "id": "50a9ad38-964f-4cfc-b2eb-b16d24118b8e",
      "name": "Sticky Note10",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        800,
        860
      ]
    },
    {
      "parameters": {
        "content": "## OPTIONS",
        "height": 233.81548368278254,
        "width": 391.7318275701643
      },
      "id": "bc1b334d-c43a-49cb-a814-625abb77a58b",
      "name": "Sticky Note13",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        380,
        820
      ]
    },
    {
      "parameters": {
        "url": "http://localhost:5678/webhook/86b982bf-deda-49ec-aece-1dc7cd65a1e0",
        "allowUnauthorizedCerts": true,
        "options": {
          "splitIntoItems": true
        }
      },
      "name": "GET /Split into items",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 1,
      "position": [
        420,
        1620
      ],
      "id": "b9af0c47-dff9-47c7-85de-27c911251728",
      "alwaysOutputData": false,
      "retryOnFail": false,
      "disabled": true
    },
    {
      "parameters": {
        "url": "http://localhost:5678/webhook/bae0f4b9-ed9c-47f6-ae6d-19f2b14bd2c9",
        "allowUnauthorizedCerts": true,
        "options": {
          "ignoreResponseCode": true
        }
      },
      "name": "GET /Ignore Response Code",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 1,
      "position": [
        -620,
        1440
      ],
      "id": "a3332167-ac15-46a1-9cd0-80745d57cf1d"
    },
    {
      "parameters": {
        "jsCode": "const assert = require('node:assert');\n\nconst data = items[0].json;\n\ndelete data.headers.accept;\n\nassert.deepStrictEqual(JSON.parse(JSON.stringify(items[0].json)),{\n  \"headers\": {\n    \"phone\": \"222\",\n    \"content-type\": \"application/json\",\n    \"user-agent\": \"axios/0.21.4\",\n    \"content-length\": \"14\",\n    \"host\": \"localhost:5678\",\n    \"connection\": \"close\"\n  },\n  \"params\": {},\n  \"query\": {\n    \"age\": \"13\"\n  },\n  \"body\": {\n    \"name\": \"Ani\"\n  }\n}\n   );\n\nreturn [];"
      },
      "id": "35281fa7-b7cf-4b85-85cf-76432c9a5a7d",
      "name": "Assert16",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -420,
        1440
      ]
    },
    {
      "parameters": {
        "content": "Request method \"HEAD\": you will need to manually check the response to ensure it is working as expected."
      },
      "id": "e6d37cea-e1c3-4e63-977b-e6c08aa529d3",
      "name": "Sticky Note11",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        800,
        1100
      ]
    },
    {
      "parameters": {
        "jsCode": "const assert = require('node:assert');\nconst data = items[0].json;\n\ndelete data.headers.accept;\n\nassert.deepStrictEqual(JSON.parse(JSON.stringify(data)),{\n  \"headers\": {\n    \"accept\": \"application/json,text/*;q=0.99\",\n    \"test\": \"test\",\n    \"content-type\": \"application/x-www-form-urlencoded\",\n    \"user-agent\": \"axios/0.21.4\",\n    \"content-length\": \"26\",\n    \"host\": \"localhost:5678\",\n    \"connection\": \"close\"\n  },\n  \"params\": {},\n  \"query\": {},\n  \"body\": {\n    \"username\": \"123\",\n    \"password\": \"yD88\"\n  }\n}\n   );\n\nreturn [];"
      },
      "id": "f5108f88-0ff0-423a-be10-892ed09b75e0",
      "name": "Assert17",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -440,
        820
      ]
    },
    {
      "parameters": {
        "requestMethod": "POST",
        "url": "http://localhost:5678/webhook/9b43a8a6-db70-4001-96d5-bce674ba071e",
        "options": {
          "bodyContentType": "form-urlencoded"
        },
        "bodyParametersUi": {
          "parameter": [
            {
              "name": "username",
              "value": "123"
            },
            {
              "name": "password",
              "value": "yD88"
            }
          ]
        },
        "headerParametersUi": {
          "parameter": [
            {
              "name": "test",
              "value": "test"
            }
          ]
        }
      },
      "name": "Body Content Type",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 1,
      "position": [
        -640,
        820
      ],
      "id": "373d6058-f423-4178-ba7b-bf536cc5c20c"
    }
  ],
  "connections": {
    "Head": {
      "main": [
        [
          {
            "node": "Assert2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Options": {
      "main": [
        [
          {
            "node": "Assert6",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Patch": {
      "main": [
        [
          {
            "node": "Assert3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Put": {
      "main": [
        [
          {
            "node": "Assert4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "When clicking \"Execute Workflow\"": {
      "main": [
        [
          {
            "node": "POST",
            "type": "main",
            "index": 0
          },
          {
            "node": "GET",
            "type": "main",
            "index": 0
          },
          {
            "node": "Head",
            "type": "main",
            "index": 0
          },
          {
            "node": "Put",
            "type": "main",
            "index": 0
          },
          {
            "node": "Patch",
            "type": "main",
            "index": 0
          },
          {
            "node": "Basic Auth/GET",
            "type": "main",
            "index": 0
          },
          {
            "node": "Return Data",
            "type": "main",
            "index": 0
          },
          {
            "node": "GET /Ignore Response Code",
            "type": "main",
            "index": 0
          },
          {
            "node": "Body Content Type",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "POST": {
      "main": [
        [
          {
            "node": "Assert1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "GET": {
      "main": [
        [
          {
            "node": "Assert",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Return Data": {
      "main": [
        [
          {
            "node": "POST with expresions",
            "type": "main",
            "index": 0
          },
          {
            "node": "GET with Expressions",
            "type": "main",
            "index": 0
          },
          {
            "node": "Put with Expression",
            "type": "main",
            "index": 0
          },
          {
            "node": "Patch with Expressions",
            "type": "main",
            "index": 0
          },
          {
            "node": "Head with Expressions",
            "type": "main",
            "index": 0
          },
          {
            "node": "Delete1",
            "type": "main",
            "index": 0
          },
          {
            "node": "Delete with Expressions",
            "type": "main",
            "index": 0
          },
          {
            "node": "Basic Auth/POST1",
            "type": "main",
            "index": 0
          },
          {
            "node": "Delete Check Querystring",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "POST with expresions": {
      "main": [
        [
          {
            "node": "Assert8",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "GET with Expressions": {
      "main": [
        [
          {
            "node": "Assert9",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Put with Expression": {
      "main": [
        [
          {
            "node": "Assert10",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Patch with Expressions": {
      "main": [
        [
          {
            "node": "Assert11",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Head with Expressions": {
      "main": [
        [
          {
            "node": "Assert12",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Delete1": {
      "main": [
        [
          {
            "node": "Assert13",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Basic Auth/POST1": {
      "main": [
        [
          {
            "node": "Assert14",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Delete with Expressions": {
      "main": [
        [
          {
            "node": "Assert5",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Basic Auth/GET": {
      "main": [
        [
          {
            "node": "Assert7",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Delete Check Querystring": {
      "main": [
        [
          {
            "node": "Assert15",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "GET /Ignore Response Code": {
      "main": [
        [
          {
            "node": "Assert16",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Body Content Type": {
      "main": [
        [
          {
            "node": "Assert17",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  }
}