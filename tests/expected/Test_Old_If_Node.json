{
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "ac7c827da56e852a0a6fec36e4b55ade4a0331714f3a850931f8ac704749495e"
  },
  "nodes": [
    {
      "parameters": {
        "jsCode": "return {\n  \"name\": \"Ani\",\n  \"id\": 1,\n  \"new\": true,\n  \"date\": \"02/10/1978\"\n}"
      },
      "id": "40459dd3-6dd8-4e46-8bb6-cfb22e63b6f7",
      "name": "Return items",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1660,
        240
      ]
    },
    {
      "parameters": {
        "jsCode": "const assert = require('node:assert');\n\nassert.deepStrictEqual(JSON.parse(JSON.stringify(items[0].json)),{\n  \"name\": \"Ani\",\n  \"id\": 1,\n  \"new\": true,\n  \"date\": \"02/10/1978\"\n}\n   );\n\nreturn [];"
      },
      "id": "c32c308c-7a2d-4a88-b580-a004e7d09541",
      "name": "Assert3",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1100,
        600
      ],
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "jsCode": "const assert = require('node:assert');\n\nassert.deepStrictEqual(JSON.parse(JSON.stringify(items[0].json)),{\n  \"name\": \"Ani\",\n  \"id\": 1,\n  \"new\": true,\n  \"date\": \"02/10/1978\"\n}\n   );\n\nreturn [];"
      },
      "id": "b5f44d54-d584-4d49-8192-30c72dcf24cb",
      "name": "Assert4",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        580,
        620
      ],
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "jsCode": "const assert = require('node:assert');\n\nassert.deepStrictEqual(JSON.parse(JSON.stringify(items[0].json)),{\n  \"name\": \"Ani\",\n  \"id\": 1,\n  \"new\": true,\n  \"date\": \"02/10/1978\"\n}\n   );\n\nreturn [];"
      },
      "id": "7b762c30-bcac-47d6-b5f1-60122034ab8d",
      "name": "Assert5",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -20,
        480
      ],
      "alwaysOutputData": true
    },
    {
      "parameters": {},
      "name": "Start1",
      "type": "n8n-nodes-base.manualTrigger",
      "typeVersion": 1,
      "position": [
        1480,
        240
      ],
      "id": "d5ec1f21-786c-40ab-8cb9-da8d685d9595"
    },
    {
      "parameters": {
        "content": "Smaller",
        "width": 413.36739328942224
      },
      "id": "20818331-9b45-4386-836b-ecb7e13eed83",
      "name": "Sticky Note7",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        320,
        600
      ]
    },
    {
      "parameters": {
        "jsCode": "const assert = require('node:assert');\n\nassert.deepStrictEqual(JSON.parse(JSON.stringify(items[0].json)),{\n  \"name\": \"Ani\",\n  \"id\": 1,\n  \"new\": true,\n  \"date\": \"02/10/1978\"\n}\n   );\n\nreturn [];"
      },
      "id": "917ac7fa-4149-47c0-b984-3b45927be471",
      "name": "Assert7",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1540,
        600
      ],
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "54f98fa2-6357-4354-881d-d40b14d21ec5",
              "leftValue": "={{ $json.name }}",
              "rightValue": "Ani",
              "operator": {
                "type": "string",
                "operation": "equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "5caafaf0-cbac-41a7-80da-df0b84b1ce14",
      "name": "IF",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        -200,
        500
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "b5300998-e76d-4a90-ab71-beb35a9f6f25",
              "leftValue": "={{ $json.id }}",
              "rightValue": 5,
              "operator": {
                "type": "number",
                "operation": "lt"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "a66256b7-3a56-43ba-82fc-9a0dd8ef05b0",
      "name": "IF1",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        360,
        640
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "cb71876a-fcde-4a62-840a-a653f555529d",
              "leftValue": "={{ $json.new }}",
              "rightValue": true,
              "operator": {
                "type": "boolean",
                "operation": "equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "8a2b7cc0-dae2-46f0-a6d8-af0f5c8165fb",
      "name": "IF2",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        880,
        620
      ]
    },
    {
      "parameters": {
        "content": "Equal",
        "width": 376.33746462566216
      },
      "id": "2961d2f1-66f8-494a-be75-982937ef488a",
      "name": "Sticky Note1",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        840,
        560
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "aa57f035-4de5-48fe-bb8f-71de04bdb56a",
              "leftValue": "=2022-09-08",
              "rightValue": "=2022-10-08",
              "operator": {
                "type": "dateTime",
                "operation": "before"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "78e5628a-ab92-4a42-96f5-950f45809934",
      "name": "IF3",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        1320,
        620
      ]
    },
    {
      "parameters": {
        "content": "## Date and Time",
        "height": 493.26935797384067,
        "width": 378.02064320128756
      },
      "id": "ab4899ff-55a4-46ab-ac28-a60ed5cd79e8",
      "name": "Sticky Note2",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        1280,
        460
      ]
    },
    {
      "parameters": {
        "content": "Equal",
        "height": 161.68317857562545,
        "width": 349.4066074156548
      },
      "id": "72e9d3f3-78c4-4b70-8054-59ce9f5e7c77",
      "name": "Sticky Note3",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -220,
        460
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "3f26bacc-fcad-4246-a70e-3a5d150d86a7",
              "leftValue": "={{ $json.name }}",
              "rightValue": "Ani",
              "operator": {
                "type": "string",
                "operation": "contains"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "66413c24-16cc-4470-a341-481e3578b44f",
      "name": "IF4",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        -200,
        680
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "afcee175-b147-442b-b39c-881ce1e8dfe8",
              "leftValue": "={{ $json.name }}",
              "rightValue": "Molly ",
              "operator": {
                "type": "string",
                "operation": "notContains"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "9dbe952e-5489-4d0a-a0f1-737852c0580e",
      "name": "IF5",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        -200,
        860
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "f5b08f8f-b986-4794-a471-e4998b971f45",
              "leftValue": "={{ $json.name }}",
              "rightValue": "Ani",
              "operator": {
                "type": "string",
                "operation": "endsWith"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "f7a70e19-a9fe-41b8-ae30-0df2d3d9c7d3",
      "name": "IF6",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        -200,
        1040
      ]
    },
    {
      "parameters": {
        "content": "Contains ",
        "width": 342.6738931131529
      },
      "id": "3bf40bf3-4578-482b-9995-5a407317bc35",
      "name": "Sticky Note4",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -220,
        640
      ]
    },
    {
      "parameters": {
        "content": "Not Contains ",
        "width": 342.6738931131529
      },
      "id": "6643282b-6094-488b-b931-f9f67080f532",
      "name": "Sticky Note5",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -220,
        820
      ]
    },
    {
      "parameters": {
        "content": "Ends With",
        "width": 335.9411788106512
      },
      "id": "ff0f4cae-a5fb-413c-8fce-f08b72ccdfd7",
      "name": "Sticky Note6",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -220,
        1000
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "61bb3c8b-32a7-450b-804f-6f7c1cabbda7",
              "leftValue": "={{ $json.name }}",
              "rightValue": "m",
              "operator": {
                "type": "string",
                "operation": "notEndsWith"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "de5f0bae-2681-4116-992e-31d3e6fe93c6",
      "name": "IF7",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        -200,
        1240
      ]
    },
    {
      "parameters": {
        "content": "Not Ends With",
        "width": 335.9411788106512
      },
      "id": "14346310-a1cd-4293-99ab-2456b9791a15",
      "name": "Sticky Note9",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -220,
        1200
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "e194dd70-15d6-49aa-96ff-28a1c3c67a09",
              "leftValue": "={{ $json.name }}",
              "rightValue": "Elly",
              "operator": {
                "type": "string",
                "operation": "notEquals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "a6eefaca-10b5-499c-9810-9aa899e0c751",
      "name": "IF8",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        -200,
        1420
      ]
    },
    {
      "parameters": {
        "content": "Not Equal",
        "height": 161.68317857562545,
        "width": 330.8916430837747
      },
      "id": "55a3dec6-66ff-4539-96da-b241668e4769",
      "name": "Sticky Note10",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -220,
        1380
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "8630c85a-cc7e-4fad-8adf-901032292fd7",
              "leftValue": "={{ $json.name }}",
              "rightValue": "Ani",
              "operator": {
                "type": "string",
                "operation": "regex"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "0390b586-6ccb-49fe-9b4c-4494570fe4b1",
      "name": "IF9",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        -200,
        1600
      ]
    },
    {
      "parameters": {
        "content": "Regex Match",
        "height": 161.68317857562545,
        "width": 330.8916430837747
      },
      "id": "e31c7e09-7993-4bc7-b235-5b467abb3e7a",
      "name": "Sticky Note11",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -220,
        1560
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "8518f91b-20c5-43e8-8dea-a4557c8d0892",
              "leftValue": "={{ $json.name }}",
              "rightValue": "Poly",
              "operator": {
                "type": "string",
                "operation": "notRegex"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "8f02feaf-be45-42d6-b6ec-ca6a50a067e6",
      "name": "IF10",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        -200,
        1780
      ]
    },
    {
      "parameters": {
        "content": "Regex Not Match",
        "height": 161.68317857562545,
        "width": 330.8916430837747
      },
      "id": "d1370b2a-955c-451e-a257-064f503968e3",
      "name": "Sticky Note12",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -220,
        1740
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "68255a2e-6241-4208-bd2d-500dbcfe0b2a",
              "leftValue": "={{ $json.name }}",
              "rightValue": "Ani",
              "operator": {
                "type": "string",
                "operation": "startsWith"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "88cf1864-37ca-44c5-b9d1-4dc7aa62868e",
      "name": "IF11",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        -200,
        1960
      ]
    },
    {
      "parameters": {
        "content": "Starts With",
        "height": 161.68317857562545,
        "width": 330.8916430837747
      },
      "id": "93a409f4-52a9-4d18-975b-00c18d7d4c0d",
      "name": "Sticky Note13",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -220,
        1920
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "0f00036f-1945-41de-86b6-f59c48865966",
              "leftValue": "={{ $json.name }}",
              "rightValue": "Molly",
              "operator": {
                "type": "string",
                "operation": "notStartsWith"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "e2a187a7-3f74-4f32-a6f1-8596e880333c",
      "name": "IF12",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        -200,
        2140
      ]
    },
    {
      "parameters": {
        "content": "Not Starts With",
        "height": 161.68317857562545,
        "width": 330.8916430837747
      },
      "id": "36cb3f3c-f386-4050-beba-1741ad7c71b2",
      "name": "Sticky Note14",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -220,
        2100
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "de85982a-2b11-4b0b-8972-8aab9d0511dd",
              "leftValue": "=",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "notExists"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "a9c7c346-e7d7-4121-82c9-121f2af3317a",
      "name": "IF13",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        -200,
        2320
      ]
    },
    {
      "parameters": {
        "content": "Is Empty",
        "height": 161.68317857562545,
        "width": 330.8916430837747
      },
      "id": "934ce777-aeda-40c4-94ce-5a21cbf71439",
      "name": "Sticky Note15",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -220,
        2280
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "42a9ff8a-cc22-48f4-b189-3702924c49d9",
              "leftValue": "={{ $json.name }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "exists"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "599c099f-6f32-4179-adb6-167aa0aba448",
      "name": "IF14",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        -200,
        2500
      ]
    },
    {
      "parameters": {
        "content": "Is Not Empty",
        "height": 161.68317857562545,
        "width": 330.8916430837747
      },
      "id": "87f33176-6abc-46e8-9ec1-3e645413a3d7",
      "name": "Sticky Note16",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -220,
        2460
      ]
    },
    {
      "parameters": {
        "jsCode": "const assert = require('node:assert');\n\nassert.deepStrictEqual(JSON.parse(JSON.stringify(items[0].json)),{\n  \"name\": \"Ani\",\n  \"id\": 1,\n  \"new\": true,\n  \"date\": \"02/10/1978\"\n}\n   );\n\nreturn [];"
      },
      "id": "5cea8cce-0cd8-41d5-b677-8633172b99a4",
      "name": "Assert",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        580,
        820
      ],
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "content": "Smaller or Equal",
        "width": 406.6346789869204
      },
      "id": "eb4b3f8a-c5b2-453e-a083-0e9b578a9357",
      "name": "Sticky Note17",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        320,
        800
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "e113fb0e-c422-4fb7-a74b-ec36647ff6b5",
              "leftValue": "={{ $json.id }}",
              "rightValue": 5,
              "operator": {
                "type": "number",
                "operation": "lte"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "b4ab143d-0ae3-4531-a0fd-fbdac8843e45",
      "name": "IF15",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        360,
        840
      ]
    },
    {
      "parameters": {
        "jsCode": "const assert = require('node:assert');\n\nassert.deepStrictEqual(JSON.parse(JSON.stringify(items[0].json)),{\n  \"name\": \"Ani\",\n  \"id\": 1,\n  \"new\": true,\n  \"date\": \"02/10/1978\"\n}\n   );\n\nreturn [];"
      },
      "id": "e3fe53af-09fd-4a18-93dc-89020298f9ce",
      "name": "Assert6",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        580,
        1000
      ],
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "content": "Equal",
        "width": 406.63467898692045
      },
      "id": "5584782f-f759-45a7-b226-d913584c32fc",
      "name": "Sticky Note18",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        320,
        980
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "b6f126e8-8e2e-434a-a410-8b470081787b",
              "leftValue": "={{ $json.id }}",
              "rightValue": 1,
              "operator": {
                "type": "number",
                "operation": "equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "8ed32eee-f554-43bd-8449-bb513f4f53ef",
      "name": "IF16",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        360,
        1020
      ]
    },
    {
      "parameters": {
        "jsCode": "const assert = require('node:assert');\n\nassert.deepStrictEqual(JSON.parse(JSON.stringify(items[0].json)),{\n  \"name\": \"Ani\",\n  \"id\": 1,\n  \"new\": true,\n  \"date\": \"02/10/1978\"\n}\n   );\n\nreturn [];"
      },
      "id": "2cd73ddd-e73d-441b-b1b5-286a1788c001",
      "name": "Assert8",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        580,
        1200
      ],
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "content": "Not Equal",
        "width": 399.90196468441854
      },
      "id": "6664be07-6642-4272-8634-79417c504d3a",
      "name": "Sticky Note19",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        320,
        1180
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "28f38704-51f1-40b7-ac1e-18467a00e943",
              "leftValue": "={{ $json.id }}",
              "rightValue": 6,
              "operator": {
                "type": "number",
                "operation": "notEquals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "797ae293-b79a-49f0-b84e-5e756a9542dc",
      "name": "IF17",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        360,
        1220
      ]
    },
    {
      "parameters": {
        "jsCode": "const assert = require('node:assert');\n\nassert.deepStrictEqual(JSON.parse(JSON.stringify(items[0].json)),{\n  \"name\": \"Ani\",\n  \"id\": 1,\n  \"new\": true,\n  \"date\": \"02/10/1978\"\n}\n   );\n\nreturn [];"
      },
      "id": "31fcdd87-9a85-4f3d-b914-2409641d6bdf",
      "name": "Assert9",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        600,
        1380
      ],
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "content": "Larger",
        "width": 396.53560753316765
      },
      "id": "2542fa97-667b-4ad5-9d05-091011224d72",
      "name": "Sticky Note20",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        320,
        1360
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "ade268f1-54e5-4b83-bde0-342d3940d7f9",
              "leftValue": "={{ $json.id }}",
              "rightValue": -2,
              "operator": {
                "type": "number",
                "operation": "gt"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "286ca8fb-fafc-457d-ac09-854be92588d1",
      "name": "IF18",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        360,
        1400
      ]
    },
    {
      "parameters": {
        "jsCode": "const assert = require('node:assert');\n\nassert.deepStrictEqual(JSON.parse(JSON.stringify(items[0].json)),{\n  \"name\": \"Ani\",\n  \"id\": 1,\n  \"new\": true,\n  \"date\": \"02/10/1978\"\n}\n   );\n\nreturn [];"
      },
      "id": "06a5e46f-72a0-4740-9cc2-25e2823b9d9b",
      "name": "Assert10",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        600,
        1560
      ],
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "content": "Larger or Equal",
        "width": 393.16925038191675
      },
      "id": "cdb3a5e8-9fdd-426f-86b8-60e446f2671b",
      "name": "Sticky Note21",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        328.21774997062187,
        1540
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "2926aeff-d678-4261-9c28-9f68951b965c",
              "leftValue": "={{ $json.id }}",
              "rightValue": 1,
              "operator": {
                "type": "number",
                "operation": "gte"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "3b403a0f-32ac-4c0f-b1a0-b8ce62c5b669",
      "name": "IF19",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        360,
        1580
      ]
    },
    {
      "parameters": {
        "jsCode": "const assert = require('node:assert');\n\nassert.deepStrictEqual(JSON.parse(JSON.stringify(items[0].json)),{\n  \"name\": \"Ani\",\n  \"id\": 1,\n  \"new\": true,\n  \"date\": \"02/10/1978\"\n}\n   );\n\nreturn [];"
      },
      "id": "23e50613-d9bb-4aff-9d6e-96dd0ec40db4",
      "name": "Assert11",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        600,
        1740
      ],
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "content": "Is Empty",
        "width": 384.7533575037893
      },
      "id": "a3dce0b5-be30-403b-b833-6ec4a9f155ba",
      "name": "Sticky Note22",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        336.6336428487491,
        1720
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "cec46729-5fab-43a9-ba0c-023c5f44c799",
              "leftValue": "=",
              "rightValue": 0,
              "operator": {
                "type": "number",
                "operation": "notExists"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "28354895-839a-4cce-ab93-483a816ca54f",
      "name": "IF20",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        360,
        1760
      ]
    },
    {
      "parameters": {
        "jsCode": "const assert = require('node:assert');\n\nassert.deepStrictEqual(JSON.parse(JSON.stringify(items[0].json)),{\n  \"name\": \"Ani\",\n  \"id\": 1,\n  \"new\": true,\n  \"date\": \"02/10/1978\"\n}\n   );\n\nreturn [];"
      },
      "id": "4e98107d-31ff-49dd-8f21-4482ce3ea56b",
      "name": "Assert12",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        600,
        1920
      ],
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "content": "Is Not Empty",
        "width": 372.97110747441127
      },
      "id": "40ce36a2-41c4-4d1d-96e0-a19088af1e36",
      "name": "Sticky Note23",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        340,
        1900
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "79746fce-0824-4362-b926-b438c155dc1f",
              "leftValue": "={{ $json.id }}",
              "rightValue": 0,
              "operator": {
                "type": "number",
                "operation": "exists"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "5eda1990-cf58-45d7-823a-d8fc394c4dd8",
      "name": "IF21",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        360,
        1940
      ]
    },
    {
      "parameters": {
        "jsCode": "const assert = require('node:assert');\n\nassert.deepStrictEqual(JSON.parse(JSON.stringify(items[0].json)),{\n  \"name\": \"Ani\",\n  \"id\": 1,\n  \"new\": true,\n  \"date\": \"02/10/1978\"\n}\n   );\n\nreturn [];"
      },
      "id": "5b8fecf5-378b-4374-a306-18e4b00d4557",
      "name": "Assert13",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1100,
        800
      ],
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "69bd6b94-52a1-4568-a535-b49dd8ff12ad",
              "leftValue": "={{ $json.new }}",
              "rightValue": false,
              "operator": {
                "type": "boolean",
                "operation": "notEquals"
              }
            }
          ],
          "combinator": "and"
        },
        "combineOperation": "any",
        "options": {}
      },
      "id": "9942a29b-5af1-440e-bbff-366ca6fab5bb",
      "name": "IF22",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        880,
        820
      ]
    },
    {
      "parameters": {
        "content": "Not Equal",
        "width": 379.70382177691306
      },
      "id": "7802451e-e1e1-4d2d-93a5-dab2f7efc480",
      "name": "Sticky Note",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        840,
        760
      ]
    },
    {
      "parameters": {
        "content": "## Boolean",
        "height": 501.68525085196796,
        "width": 376.33746462566205
      },
      "id": "100f19e4-1ca3-47f8-a706-5c35b676b861",
      "name": "Sticky Note8",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        840,
        460
      ]
    },
    {
      "parameters": {
        "content": "Occurred Before ",
        "width": 359.5056788694076
      },
      "id": "e0d6fb23-b46c-412d-a8ce-7b282e5b6448",
      "name": "Sticky Note24",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        1280,
        560
      ]
    },
    {
      "parameters": {
        "content": "Occurred After",
        "width": 314.05985732752015
      },
      "id": "cec9a06d-b43f-414c-83b1-200b41499f5b",
      "name": "Sticky Note25",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        1300,
        780
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "2e43310c-11e7-4273-a80a-102257b65f22",
              "leftValue": "=2022-08-02",
              "rightValue": "=2021-10-05",
              "operator": {
                "type": "dateTime",
                "operation": "after"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "1e5c7e16-ae07-425e-9bb3-0b82713170a0",
      "name": "IF23",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        1320,
        820
      ]
    },
    {
      "parameters": {
        "jsCode": "const assert = require('node:assert');\n\nassert.deepStrictEqual(JSON.parse(JSON.stringify(items[0].json)),{\n  \"name\": \"Ani\",\n  \"id\": 1,\n  \"new\": true,\n  \"date\": \"02/10/1978\"\n}\n   );\n\nreturn [];"
      },
      "id": "624cbc7c-0dd9-4d5e-8e0b-c47a0550d62e",
      "name": "Assert14",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1540,
        800
      ],
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "content": "## Number",
        "height": 1649.8824016573055,
        "width": 507.6253935244479
      },
      "id": "0eb97ca1-d087-449c-baae-439a50512335",
      "name": "Sticky Note26",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        300,
        460
      ]
    },
    {
      "parameters": {
        "jsCode": "const assert = require('node:assert');\n\nassert.deepStrictEqual(JSON.parse(JSON.stringify(items[0].json)),{\n  \"name\": \"Ani\",\n  \"id\": 1,\n  \"new\": true,\n  \"date\": \"02/10/1978\"\n}\n   );\n\nreturn [];"
      },
      "id": "e42ebbfb-64e1-4dd0-b671-83437ff0ac19",
      "name": "Assert15",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -20,
        660
      ],
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "jsCode": "const assert = require('node:assert');\n\nassert.deepStrictEqual(JSON.parse(JSON.stringify(items[0].json)),{\n  \"name\": \"Ani\",\n  \"id\": 1,\n  \"new\": true,\n  \"date\": \"02/10/1978\"\n}\n   );\n\nreturn [];"
      },
      "id": "f45b5779-9b33-4d84-a3e6-fd1c40ece9d5",
      "name": "Assert16",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -20,
        840
      ],
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "jsCode": "const assert = require('node:assert');\n\nassert.deepStrictEqual(JSON.parse(JSON.stringify(items[0].json)),{\n  \"name\": \"Ani\",\n  \"id\": 1,\n  \"new\": true,\n  \"date\": \"02/10/1978\"\n}\n   );\n\nreturn [];"
      },
      "id": "3baff634-b842-4ee2-bb34-21fd99286859",
      "name": "Assert17",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -20,
        1020
      ],
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "jsCode": "const assert = require('node:assert');\n\nassert.deepStrictEqual(JSON.parse(JSON.stringify(items[0].json)),{\n  \"name\": \"Ani\",\n  \"id\": 1,\n  \"new\": true,\n  \"date\": \"02/10/1978\"\n}\n   );\n\nreturn [];"
      },
      "id": "1002c1b9-79e1-452e-a4e4-9d12f5957595",
      "name": "Assert18",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -20,
        1220
      ],
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "jsCode": "const assert = require('node:assert');\n\nassert.deepStrictEqual(JSON.parse(JSON.stringify(items[0].json)),{\n  \"name\": \"Ani\",\n  \"id\": 1,\n  \"new\": true,\n  \"date\": \"02/10/1978\"\n}\n   );\n\nreturn [];"
      },
      "id": "dcc19244-bd5a-4bcb-a802-ee68750a2199",
      "name": "Assert19",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -20,
        1400
      ],
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "jsCode": "const assert = require('node:assert');\n\nassert.deepStrictEqual(JSON.parse(JSON.stringify(items[0].json)),{\n  \"name\": \"Ani\",\n  \"id\": 1,\n  \"new\": true,\n  \"date\": \"02/10/1978\"\n}\n   );\n\nreturn [];"
      },
      "id": "a24cc87b-d7a8-4fe3-83b2-de35d8449c0a",
      "name": "Assert20",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -20,
        1580
      ],
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "jsCode": "const assert = require('node:assert');\n\nassert.deepStrictEqual(JSON.parse(JSON.stringify(items[0].json)),{\n  \"name\": \"Ani\",\n  \"id\": 1,\n  \"new\": true,\n  \"date\": \"02/10/1978\"\n}\n   );\n\nreturn [];"
      },
      "id": "a228cbf0-668b-4c62-a8d4-f7381d314502",
      "name": "Assert21",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -20,
        1760
      ],
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "jsCode": "const assert = require('node:assert');\n\nassert.deepStrictEqual(JSON.parse(JSON.stringify(items[0].json)),{\n  \"name\": \"Ani\",\n  \"id\": 1,\n  \"new\": true,\n  \"date\": \"02/10/1978\"\n}\n   );\n\nreturn [];"
      },
      "id": "955dd692-a8c0-44d0-b3c2-4f0c5487d9bd",
      "name": "Assert22",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -20,
        1940
      ],
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "jsCode": "const assert = require('node:assert');\n\nassert.deepStrictEqual(JSON.parse(JSON.stringify(items[0].json)),{\n  \"name\": \"Ani\",\n  \"id\": 1,\n  \"new\": true,\n  \"date\": \"02/10/1978\"\n}\n   );\n\nreturn [];"
      },
      "id": "b14424ca-8159-4e39-9c3c-ede05cd16bd5",
      "name": "Assert23",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -20,
        2120
      ],
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "jsCode": "const assert = require('node:assert');\n\nassert.deepStrictEqual(JSON.parse(JSON.stringify(items[0].json)),{\n  \"name\": \"Ani\",\n  \"id\": 1,\n  \"new\": true,\n  \"date\": \"02/10/1978\"\n}\n   );\n\nreturn [];"
      },
      "id": "958f4c48-9ac9-4407-bc55-37335b51b6ae",
      "name": "Assert24",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -20,
        2300
      ],
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "jsCode": "const assert = require('node:assert');\n\nassert.deepStrictEqual(JSON.parse(JSON.stringify(items[0].json)),{\n  \"name\": \"Ani\",\n  \"id\": 1,\n  \"new\": true,\n  \"date\": \"02/10/1978\"\n}\n   );\n\nreturn [];"
      },
      "id": "131f8481-e892-496a-829c-01a269a11255",
      "name": "Assert25",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -20,
        2480
      ],
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "content": "## This workflow tests the conversion of IF node type version 1 to 2\n",
        "height": 211.4314189209486,
        "width": 430.7248451651848
      },
      "id": "9da2a0c9-a172-4c56-b5c7-f0efcf97a9b4",
      "name": "Sticky Note27",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -880,
        260
      ]
    }
  ],
  "connections": {
    "Return items": {
      "main": [
        [
          {
            "node": "IF",
            "type": "main",
            "index": 0
          },
          {
            "node": "IF1",
            "type": "main",
            "index": 0
          },
          {
            "node": "IF2",
            "type": "main",
            "index": 0
          },
          {
            "node": "IF3",
            "type": "main",
            "index": 0
          },
          {
            "node": "IF4",
            "type": "main",
            "index": 0
          },
          {
            "node": "IF5",
            "type": "main",
            "index": 0
          },
          {
            "node": "IF6",
            "type": "main",
            "index": 0
          },
          {
            "node": "IF7",
            "type": "main",
            "index": 0
          },
          {
            "node": "IF8",
            "type": "main",
            "index": 0
          },
          {
            "node": "IF9",
            "type": "main",
            "index": 0
          },
          {
            "node": "IF10",
            "type": "main",
            "index": 0
          },
          {
            "node": "IF11",
            "type": "main",
            "index": 0
          },
          {
            "node": "IF12",
            "type": "main",
            "index": 0
          },
          {
            "node": "IF13",
            "type": "main",
            "index": 0
          },
          {
            "node": "IF14",
            "type": "main",
            "index": 0
          },
          {
            "node": "IF15",
            "type": "main",
            "index": 0
          },
          {
            "node": "IF16",
            "type": "main",
            "index": 0
          },
          {
            "node": "IF17",
            "type": "main",
            "index": 0
          },
          {
            "node": "IF18",
            "type": "main",
            "index": 0
          },
          {
            "node": "IF19",
            "type": "main",
            "index": 0
          },
          {
            "node": "IF20",
            "type": "main",
            "index": 0
          },
          {
            "node": "IF21",
            "type": "main",
            "index": 0
          },
          {
            "node": "IF22",
            "type": "main",
            "index": 0
          },
          {
            "node": "IF23",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Start1": {
      "main": [
        [
          {
            "node": "Return items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "IF": {
      "main": [
        [
          {
            "node": "Assert5",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "IF1": {
      "main": [
        [
          {
            "node": "Assert4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "IF2": {
      "main": [
        [
          {
            "node": "Assert3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "IF3": {
      "main": [
        [
          {
            "node": "Assert7",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "IF4": {
      "main": [
        [
          {
            "node": "Assert15",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "IF5": {
      "main": [
        [
          {
            "node": "Assert16",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "IF6": {
      "main": [
        [
          {
            "node": "Assert17",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "IF7": {
      "main": [
        [
          {
            "node": "Assert18",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "IF8": {
      "main": [
        [
          {
            "node": "Assert19",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "IF9": {
      "main": [
        [
          {
            "node": "Assert20",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "IF10": {
      "main": [
        [
          {
            "node": "Assert21",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "IF11": {
      "main": [
        [
          {
            "node": "Assert22",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "IF12": {
      "main": [
        [
          {
            "node": "Assert23",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "IF13": {
      "main": [
        [
          {
            "node": "Assert24",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "IF14": {
      "main": [
        [
          {
            "node": "Assert25",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "IF15": {
      "main": [
        [
          {
            "node": "Assert",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "IF16": {
      "main": [
        [
          {
            "node": "Assert6",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "IF17": {
      "main": [
        [
          {
            "node": "Assert8",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "IF18": {
      "main": [
        [
          {
            "node": "Assert9",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "IF19": {
      "main": [
        [
          {
            "node": "Assert10",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "IF20": {
      "main": [
        [
          {
            "node": "Assert11",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "IF21": {
      "main": [
        [
          {
            "node": "Assert12",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "IF22": {
      "main": [
        [
          {
            "node": "Assert13",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "IF23": {
      "main": [
        [
          {
            "node": "Assert14",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "pinData": {}
}